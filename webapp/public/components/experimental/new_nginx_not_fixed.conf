server {
    listen 443 ssl;
    server_name localhost;
    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    root /var/www/html/public;
    index index.php;

    #add security headers
    #full recommended list: https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html , https://owasp.org/www-project-secure-headers/ci/headers_add.json
    #NOTE: I did not implement all of them
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload' always;
#    add_header Content-Security-Policy "default-src 'self'; font-src *;img-src * data:; script-src *; style-src *" always;
    add_header Content-Security-Policy "default-src 'self'; form-action 'self'; object-src 'none'; frame-ancestors 'none'; upgrade-insecure-requests; block-all-mixed-content" always;
#    add_header X-XSS-Protection "1; mode=block"; #MDN says this is worse than not using it: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
    add_header X-Frame-Options "DENY" always; #TODO make sure this doesn't break anything, revert to SAMEORIGIN if it does.
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy "strict-origin" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()" always; #reference for potential changes: https://github.com/w3c/webappsec-permissions-policy/blob/main/features.md
    

    location ~ \.php$ {
       fastcgi_pass   backend-php-server:9000;
       fastcgi_index  index.php;
       fastcgi_param REQUEST_METHOD $request_method;
       fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
       include        fastcgi_params;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
}
